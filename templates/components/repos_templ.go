// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"gitea.vivasoftltd.com/Vivasoft/gitea-commiter-plugin/pkg/model"
)

func ReposScript(repos []model.Repo, org string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_ReposScript_8982`,
		Function: `function __templ_ReposScript_8982(repos, org){function searchRepos() {
        const query = document.getElementById('searchInput').value.toLowerCase();
        const resultsDiv = document.getElementById('searchResults');

        // If query is empty, clear results and hide the container
        if (query.length < 1) {
            resultsDiv.innerHTML = '';
            resultsDiv.classList.add('hidden');
            return;
        }

        // Clear previous results
        resultsDiv.innerHTML = '';

        // Filter the repositories based on the search query
        const filteredRepos = repos.filter(repo => {
            return (repo.name?.toLowerCase().includes(query) || '');
        });

        // If there are matching repositories, display them
        if (filteredRepos.length > 0) {
            resultsDiv.classList.remove('hidden');

            // Limit to the top 5 results
            filteredRepos.slice(0, 6).forEach(repo => {
                const resultItem = ` + "`" + `
                    <div class="p-2 hover:bg-gray-100 cursor-pointer" data-repo-id="${repo.name}">
                        <div class="flex items-center gap-4">
                            <div class="font-semibold">${repo.name}</div>
                        </div>
                    </div>
                ` + "`" + `;
                resultsDiv.innerHTML += resultItem;
            });

            // Attach click event listeners to dynamically generated items
            document.querySelectorAll('[data-repo-id]').forEach((el) => {
                el.addEventListener('click', () => {
                    window.location.href = ` + "`" + `/orgs/${org}/repos/${el.getAttribute('data-repo-id')}` + "`" + `;
                });
            });
        } else {
            resultsDiv.innerHTML = '<div class="p-2 text-gray-500 text-center">No matching repositories</div>';
        }
    }

    window.onload = function () {
        document.getElementById('searchInput').addEventListener('input', searchRepos);
    };
}`,
		Call:       templ.SafeScript(`__templ_ReposScript_8982`, repos, org),
		CallInline: templ.SafeScriptInline(`__templ_ReposScript_8982`, repos, org),
	}
}

func Repos(repos []model.Repo, org string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Navbar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ReposScript(repos, org).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"container mx-auto py-10\"><h1 class=\"text-2xl font-bold text-center mb-8\">Search Repositories</h1><!-- Search Input --><div class=\"relative px-10\"><input type=\"text\" id=\"searchInput\" class=\"w-full px-4 py-2 border border-gray-300 rounded-lg\" placeholder=\"Search repositories by name...\"><!-- Results Container --><div id=\"searchResults\" class=\"z-10 mx-auto w-full bg-white border border-gray-300 rounded-lg shadow-lg hidden\"><!-- Search results will be dynamically injected here --></div></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
