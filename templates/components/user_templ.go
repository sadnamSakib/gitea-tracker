// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"gitea.vivasoftltd.com/Vivasoft/gitea-commiter-plugin/pkg/model"
	"strconv"
)

var onceHandle = templ.NewOnceHandle()

func User(user model.User, dailyCommitCountList []int, repoCommitCountList []int, repoNameList []string, dateList []string, viewBy string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Navbar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!-- Include Chart.js from CDN --><script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = UserScript(user.Username, dailyCommitCountList, repoCommitCountList, repoNameList, dateList, user.Following).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"container mx-auto py-10 px-10\"><div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\"><div class=\"col-span-1 bg-white shadow-md rounded-lg p-4\"><div class=\"flex justify-center mb-4\"><img src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(user.Avatar_url)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user.templ`, Line: 28, Col: 53}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" alt=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("Avatar of %s", user.Username))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user.templ`, Line: 28, Col: 102}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"rounded-full w-32 h-32 object-cover\"></div><div class=\"text-lg font-semibold text-center mb-2 flex justify-center items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(user.Username)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user.templ`, Line: 32, Col: 42}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" <button id=\"followButton\" class=\"ml-2 px-2 py-1 text-sm rounded-md font-medium\"><!-- The button text will be handled in the script --></button></div><div class=\"text-sm text-gray-700 text-center mb-2\"><strong>Email:</strong> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(user.Email)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user.templ`, Line: 40, Col: 63}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"text-sm text-gray-700 text-center mb-2\"><strong>Lifetime Commits :</strong> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(user.Aggregated_Commits.All_Time))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user.templ`, Line: 44, Col: 111}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"text-sm text-gray-700 text-center mb-2\"><strong>Repositories Contributed To :</strong> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(len(user.Repos)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user.templ`, Line: 48, Col: 105}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><div class=\"col-span-2\"><div class=\"flex justify-end mb-2\"><button type=\"button\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded inline-flex items-center\"><svg class=\"w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path fill=\"#FFD43B\" d=\"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\"></path></svg> <a href=\"/users\">Back To Search</a></button></div><div class=\"flex justify-between items-center mb-4\"><!-- Left section for Commits and Repositories --><div class=\"text-left\"><div class=\"text-xl font-semibold\">Commits : <span id=\"totalCommits\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(func() int {
			total := 0
			for _, commitCount := range dailyCommitCountList {
				total += commitCount
			}
			return total
		}()))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user.templ`, Line: 72, Col: 44}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span></div><div class=\"text-xl font-semibold\">Repositories Worked On : <span id=\"totalRepos\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 string
		templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(len(repoNameList)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user.templ`, Line: 76, Col: 115}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span></div></div><!-- Right section for View By dropdown --><div class=\"text-right\"><label for=\"viewBy\" class=\"mr-2\">View By:</label> <select id=\"viewBy\" name=\"viewBy\" class=\"border p-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		switch viewBy {
		case "week":
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option value=\"week\" selected>This Week</option> <option value=\"month\">This Month</option> <option value=\"year\">This Year</option> <option value=\"allTime\">All Time</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "month":
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option value=\"week\">This Week</option> <option value=\"month\" selected>This Month</option> <option value=\"year\">This Year</option> <option value=\"allTime\">All Time</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "year":
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option value=\"week\">This Week</option> <option value=\"month\">This Month</option> <option value=\"year\" selected>This Year</option> <option value=\"allTime\">All Time</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "allTime":
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option value=\"week\">This Week</option> <option value=\"month\">This Month</option> <option value=\"year\">This Year</option> <option value=\"allTime\" selected>All Time</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		default:
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option value=\"week\" selected>This Week</option> <option value=\"month\">This Month</option> <option value=\"year\">This Year</option> <option value=\"allTime\">All Time</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</select></div></div><div class=\"mb-2\" widht=\"250\" height=\"250\"><canvas id=\"repoCommitChart\" width=\"200\" height=\"200\"></canvas></div><div class=\"my-6\" widht=\"250\" height=\"250\"><canvas id=\"commitDailyChart\" width=\"200\" height=\"200\"></canvas></div></div></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func UserScript(username string, dailyCommitCountList []int, repoCommitCountList []int, repoNameList []string, dateList []string, following bool) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_UserScript_761a`,
		Function: `function __templ_UserScript_761a(username, dailyCommitCountList, repoCommitCountList, repoNameList, dateList, following){async function toggleFollow() {
        const followButton = document.getElementById('followButton');

        // Set the initial state of the button based on the following attribute
        if (following) {
            followButton.innerText = 'Following';
            followButton.classList.add('following');
        } else {
            followButton.innerText = 'Follow';
            followButton.classList.add('follow');
        }

        // Add click event to toggle between follow/unfollow
        followButton.addEventListener('click', async function () {
            if (followButton.innerText === 'Follow') {
                // Call the follow API
                const followResponse = await fetch(` + "`" + `/api/users/${username}/follow` + "`" + `, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                if (followResponse.ok) {
                    // Change to 'Following'
                    followButton.innerText = 'Following';
                    followButton.classList.remove('follow');
                    followButton.classList.add('following');

                    // Update following status
                    following = true;
                    console.log(` + "`" + `Now following ${username}` + "`" + `);
                } else {
                    console.error('Failed to follow user.');
                }
            } else {
                // Call the unfollow API
                const unfollowResponse = await fetch(` + "`" + `/api/users/${username}/unfollow` + "`" + `, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                if (unfollowResponse.ok) {
                    // Change to 'Follow'
                    followButton.innerText = 'Follow';
                    followButton.classList.remove('following');
                    followButton.classList.add('follow');

                    // Update following status
                    following = false;
                    console.log(` + "`" + `Unfollowed ${username}` + "`" + `);
                } else {
                    console.error('Failed to unfollow user.');
                }
            }
        });
    }

    function renderCommitDailyChart(dates, commitCounts) {
        var ctx = document.getElementById('commitDailyChart').getContext('2d');
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: 'Commits',
                    data: commitCounts,
                    fill: true,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    tension: 0.5
                }]
            },
            options: {
                responsive: true, 
                maintainAspectRatio: false, 
                aspectRatio: 1,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    }

    function renderRepoCommitChart(repoNames, repoCommitCounts) {
        var ctx = document.getElementById('repoCommitChart').getContext('2d');
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: repoNames,
                datasets: [{
                    label: 'Commits per Repo',
                    data: repoCommitCounts,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                aspectRatio: 1,
                layout: {
                    padding: {
                        left: 0,
                        right: 30
                    }
                },
                plugins: {
                    legend: {
                        position: 'left',
                        align: 'start',
                        labels: {
                            boxWidth: 20,
                            padding: 10
                        }
                    }
                }
            }
        });
    }

    window.onload = function () {
        renderCommitDailyChart(dateList, dailyCommitCountList);
        renderRepoCommitChart(repoNameList, repoCommitCountList);
        toggleFollow();

        document.getElementById('viewBy').addEventListener('change', function () {
            var viewBy = document.getElementById('viewBy').value;
            var url = ` + "`" + `/users/${username}?viewBy=${viewBy}` + "`" + `;
            window.location.href = url;
        });
    };
}`,
		Call:       templ.SafeScript(`__templ_UserScript_761a`, username, dailyCommitCountList, repoCommitCountList, repoNameList, dateList, following),
		CallInline: templ.SafeScriptInline(`__templ_UserScript_761a`, username, dailyCommitCountList, repoCommitCountList, repoNameList, dateList, following),
	}
}

var _ = templruntime.GeneratedTemplate
